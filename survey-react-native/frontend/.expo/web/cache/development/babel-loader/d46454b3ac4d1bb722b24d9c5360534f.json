{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/joshua.miles/Documents/My-Cohorts/houston-se-030920/Lecture-Code/survey-react-native/frontend/views/Login.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { registerDeviceForNotifications } from \"../registerDeviceForNotifications\";\nimport { useHistory } from 'react-router';\nexport function Login() {\n  var history = useHistory();\n\n  var _useState = useState({\n    username: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      form = _useState2[0],\n      changeForm = _useState2[1];\n\n  function handleSubmit() {\n    var response, _await$response$json, success;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(process.env.REACT_NATIVE_BACKEND_URL + \"/login\", {\n              credentials: 'include',\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: form.username,\n                password: form.password\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            _await$response$json = _context.sent;\n            success = _await$response$json.success;\n\n            if (success) {\n              history.push(\"/\");\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Login\"), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Username\"), React.createElement(TextInput, {\n    value: form.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/joshua.miles/Documents/My-Cohorts/houston-se-030920/Lecture-Code/survey-react-native/frontend/views/Login.js"],"names":["React","useState","registerDeviceForNotifications","useHistory","Login","history","username","password","form","changeForm","handleSubmit","fetch","process","env","REACT_NATIVE_BACKEND_URL","credentials","method","headers","body","JSON","stringify","response","json","success","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,8BAAT;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,SAASC,KAAT,GAAgB;AAEnB,MAAMC,OAAO,GAAGF,UAAU,EAA1B;;AAFmB,kBAIUF,QAAQ,CAAC;AAClCK,IAAAA,QAAQ,EAAE,EADwB;AAElCC,IAAAA,QAAQ,EAAE;AAFwB,GAAD,CAJlB;AAAA;AAAA,MAIXC,IAJW;AAAA,MAILC,UAJK;;AASnB,WAAeC,YAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACyBC,KAAK,CAAIC,OAAO,CAACC,GAAR,CAAYC,wBAAhB,aAAkD;AACxEC,cAAAA,WAAW,EAAE,SAD2D;AAExEC,cAAAA,MAAM,EAAE,MAFgE;AAGxEC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAH+D;AAMxEC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBd,gBAAAA,QAAQ,EAAEE,IAAI,CAACF,QADE;AAEjBC,gBAAAA,QAAQ,EAAEC,IAAI,CAACD;AAFE,eAAf;AANkE,aAAlD,CAD9B;;AAAA;AACQc,YAAAA,QADR;AAAA;AAAA,6CAY4BA,QAAQ,CAACC,IAAT,EAZ5B;;AAAA;AAAA;AAYUC,YAAAA,OAZV,wBAYUA,OAZV;;AAaI,gBAAGA,OAAH,EAAW;AACPlB,cAAAA,OAAO,CAACmB,IAAR;AACH;;AAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEhB,IAAI,CAACF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,EAMI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,CADJ;AAaH","sourcesContent":["import React, { useState } from 'react'\nimport { View, TextInput, Button, Text, Platform } from 'react-native'\nimport { registerDeviceForNotifications } from '../registerDeviceForNotifications'\nimport { useHistory } from 'react-router'\n  \nexport function Login(){\n\n    const history = useHistory()\n\n    const [ form, changeForm ] = useState({\n        username: '',\n        password: ''\n    })\n\n    async function handleSubmit(){\n        let response = await fetch(`${process.env.REACT_NATIVE_BACKEND_URL}/login`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: form.username,\n                password: form.password\n            })\n        })\n        let { success } = await response.json()\n        if(success){\n            history.push(`/`)\n        }\n    }\n\n    return (\n        <View>\n            <Text>Login</Text>\n            <View>\n                <Text>Username</Text>\n                <TextInput value={form.username} />\n            </View>\n            <View>\n                <Text>Password</Text>\n                <TextInput />\n            </View>\n        </View>\n    )\n}  "]},"metadata":{},"sourceType":"module"}