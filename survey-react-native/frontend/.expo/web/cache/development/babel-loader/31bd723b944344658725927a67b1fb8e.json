{"ast":null,"code":"var _jsxFileName = \"/Users/joshua.miles/Documents/My-Cohorts/houston-se-030920/Lecture-Code/survey-react-native/frontend/App.js\";\nimport React, { useEffect } from 'react';\nimport { Router } from \"./Router\";\nimport { Login } from \"./views/Login\";\nimport { PuppyList } from \"./views/PuppyList\";\nimport { useHistory, Route } from 'react-router';\nimport { registerDeviceForNotifications } from \"./registerDeviceForNotifications\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function App() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, React.createElement(Index, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }\n  }));\n}\n\nfunction Index() {\n  var history = useHistory();\n  useEffect(function () {\n    fetch(process.env.REACT_NATIVE_BACKEND_URL + \"/profile\", {\n      credentials: 'include'\n    }).then(function (res) {\n      return res.json();\n    }).then(function (loggedInUser) {\n      if (loggedInUser === null) {\n        history.push('/login');\n      } else {\n        if (Platform.OS != 'web') {\n          registerDeviceForNotifications();\n        }\n\n        history.push('/');\n      }\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: PuppyList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/joshua.miles/Documents/My-Cohorts/houston-se-030920/Lecture-Code/survey-react-native/frontend/App.js"],"names":["React","useEffect","Router","Login","PuppyList","useHistory","Route","registerDeviceForNotifications","App","Index","history","fetch","process","env","REACT_NATIVE_BACKEND_URL","credentials","then","res","json","loggedInUser","push","Platform","OS"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT;AACA,SAASC,KAAT;AACA,SAASC,SAAT;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,cAAlC;AACA,SAASC,8BAAT;;AAGA,eAAe,SAASC,GAAT,GAAe;AAC7B,SACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAKA;;AAGD,SAASC,KAAT,GAAiB;AAEhB,MAAMC,OAAO,GAAGL,UAAU,EAA1B;AAEAJ,EAAAA,SAAS,CAAC,YAAM;AACfU,IAAAA,KAAK,CAAIC,OAAO,CAACC,GAAR,CAAYC,wBAAhB,eAAoD;AACxDC,MAAAA,WAAW,EAAE;AAD2C,KAApD,CAAL,CAGEC,IAHF,CAGO,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAHV,EAIEF,IAJF,CAIO,UAAAG,YAAY,EAAI;AACrB,UAAIA,YAAY,KAAK,IAArB,EAA2B;AAC1BT,QAAAA,OAAO,CAACU,IAAR,CAAa,QAAb;AACA,OAFD,MAEO;AACN,YAAIC,QAAQ,CAACC,EAAT,IAAe,KAAnB,EAA0B;AACzBf,UAAAA,8BAA8B;AAC9B;;AACDG,QAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACA;AACD,KAbF;AAcA,GAfQ,EAeN,EAfM,CAAT;AAiBA,SACC,0CACC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEjB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD;AAMA","sourcesContent":["import React, { useEffect } from 'react';\nimport { Router } from './Router'\nimport { Login } from './views/Login';\nimport { PuppyList } from './views/PuppyList';\nimport { useHistory, Route } from 'react-router';\nimport { registerDeviceForNotifications } from './registerDeviceForNotifications';\nimport { Platform } from 'react-native';\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Index />\n\t\t</Router>\n\t);\n}\n\n// I'm using a seperate component here so that I can access the history object from NativeRouter\nfunction Index() {\n\n\tconst history = useHistory()\n\n\tuseEffect(() => {\n\t\tfetch(`${process.env.REACT_NATIVE_BACKEND_URL}/profile`, {\n\t\t\tcredentials: 'include',\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(loggedInUser => {\n\t\t\t\tif (loggedInUser === null) {\n\t\t\t\t\thistory.push('/login') // <-- If the user is not logged in, redirect them to the login page\n\t\t\t\t} else {\n\t\t\t\t\tif (Platform.OS != 'web') {\n\t\t\t\t\t\tregisterDeviceForNotifications()\n\t\t\t\t\t}\n\t\t\t\t\thistory.push('/')\n\t\t\t\t}\n\t\t\t})\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t<Route exact path=\"/\" component={PuppyList} />\n\t\t</>\n\t)\n}"]},"metadata":{},"sourceType":"module"}